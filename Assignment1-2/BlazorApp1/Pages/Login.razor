@page "/Login"
@using HttpClients.ClientInterfaces

@inject IAuthService authService
@inject NavigationManager navMgr


<div class="card">
    <AuthorizeView>
        <NotAuthorized>
            <div class="card">
                <h3>Please login</h3>
                <div class="field">
                    <label>User name:</label>
                    <input type="text" @bind="username"/>
                </div>
                <div class="field">
                    <label style="text-align: center">Password:</label>
                    <input type="password" @bind="password"/>
                </div>
                @if (!string.IsNullOrEmpty(errorLabel))
                {
                    <div class="field">
                        <label style="color: red">
                            @errorLabel
                        </label>
                    </div>
                }
                <div class="field">
                    <button class="loginbtn" @onclick="LoginAsync">Log in</button>
                </div>
            </div>
          
            <br/><button class="loginbtn" @onclick="@(() => navMgr.NavigateTo($"/CreateUser"))"> I'm not registered </button>
        </NotAuthorized>
        <Authorized>
            <div class="card">
                <h3>Hello, @context.User.Identity.Name</h3>
            </div>
        </Authorized>
    </AuthorizeView>
    
   
</div>


@code {
    private string username = "";
    private string password = "";
    private string color = "";
    private string errorLabel;

    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        {
            await authService.LoginAsync(username, password);
            navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }

}


